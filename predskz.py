import random
import time
import os
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from dotenv import load_dotenv
from aiogram.types import ReplyKeyboardRemove





load_dotenv()

TOKEN = os.getenv("TOKEN")


logging.basicConfig(level=logging.INFO)

bot = Bot(TOKEN)

dp = Dispatcher(bot, storage=MemoryStorage())
ADMINS = [os.getenv("ADMINS")]






async def set_default_commands(dp):
    await dp.bot.set_my_commands([
        types.BotCommand(
            command="start",
            description="Запустить бота"
        ),
        types.BotCommand(
            command="stop",
            description="Остановить бота"
        ),
        types.BotCommand(
            command="ask",
            description="Спросить вопрос у предсказателя"
        ),
    types.BotCommand(
        command="adv",
        description="Спросить универсальный вопрос у предсказателя"
        ),
        types.BotCommand(
            command="help",
            description="Справка по использованию"

        )
    ])




@dp.message_handler(commands="ask")
async def predict(message: types.Message, state:FSMContext):
    await message.answer("Введи свой вопрос предсказателю:")
    await state.set_state("ask_state")

@dp.message_handler(state="ask_state")
async def ask_state(message:types.Message, state:FSMContext):

    user_input = message.text



    if user_input.strip() == '':
        await message.answer("Ты не задал вопрос.")
    elif user_input.isdigit():
        await message.answer("Предсказатель тебя не понял, повтори вопрос. ")
    else:

        list_pred = [
            "Бесспорно", "Никаких сомнений", "Определённо да", "Можешь быть уверен в этом","Предрешено", "Это возможно", "Можете полагаться на это", "Интуиция подсказывает - да", "Без сомнения, да", "Абсолютно верно", "Словно звёзды говорят - да","Астрологические знаки говорят - да" #Положительные
            "Мне кажется — «да»","Вероятнее всего","Хорошие перспективы","Знаки говорят — «да»","Да", "Вероятность положительного исхода высока", "Это возможно", "Настроение склоняется к положительному ответу", "Слегка склоняюсь к «да»", "Может быть так", "Верь в это", "Это несомненно возможная правда" #Нерешительно положительные
            "Пока не ясно, попробуй снова","Спроси позже","Лучше не рассказывать","Сейчас нельзя предсказать","Сконцентрируйся и спроси опять", "Лучше не рассказывать", "Это не так уж и важно", "Мой ответ - мда... не знаю", "Не могу дать однозначный ответ", "По каким-то причинам не могу сказать", "Мой мозг зациклился" #Нейтральные
            "Даже не думай","Мой ответ — «нет»","По моим данным — «нет»","Перспективы не очень хорошие","Весьма сомнительно","Прогноз неутешителен", "По всем признакам - нет", "Интуиция подсказывает - нет", "Без вариантов - нет", "Нет, не стоит рассчитывать", "Мой ответ - это точно не произойдет", "Если спросить у каждого моего знакомого мага, он даст тебе однозначный ответ - нет" #Отрицательные
        ]


        a = random.choice(list_pred)
        await message.answer("Предсказатель думает...")
        time.sleep(2)
        await message.answer("Предсказатель пытается задействовать все силы для точного ответа...")
        time.sleep(2)
        await message.answer("Ответ почти готов...")
        time.sleep(1)
        await message.answer(a)
    time.sleep(2)
    await message.answer("Введи /ask чтобы задать следуйщий вопрос предсказателю!")
    await state.finish()



@dp.message_handler(commands="adv")
async def predict(message: types.Message, state:FSMContext):
    await message.answer("Введи свой вопрос для принятия решения: ")
    await state.set_state("adv_state")

@dp.message_handler(state="adv_state")
async def adv_state(message:types.Message, state:FSMContext):

    user_input = message.text

    if user_input.strip() == '':
        await message.answer("Ты не задал решение.")
    elif user_input.isdigit():
        await message.answer("Предсказатель тебя не понял, повторись. ")
    else:
        list_adv = [ "Вижу яркое будущее. Верьте и двигайтесь вперед!","Звучит замечательно! Попробуйте, и удача будет на вашей стороне.","Все знаки указывают на положительное развитие событий. Не упустите свой шанс!","Впереди вас ждет великая судьба. Ваш потенциал безграничен!", "Ваши усилия не пройдут даром. Вас ждет много радостных событий.", "Судьба улыбнеться вам. Готовьтесь к счастью и удаче по этому поводу!", "Этот вариативный путь наполнен радостью и возможностями. Освой их!","Это дело приготовит для вас чудеса. Верьте в свой потенциал.", "Это приведет вас к замечательным результатам. Вперед!", "Я вижу множество свершений, судьба на вашей стороне!"   #положительные
                     "Судьба может быть переменчивой. Важно оценить риски и принимать обдуманные решения.", "Помните, что судьба зависит от ваших действий. Постарайтесь действовать разумно.", "Будущее не всегда предсказуемо. Сосредоточьтесь на планировании и стратегии.", "Будьте осторожны в своих действиях. Судьба может подкинуть испытаний.", "В этом деле может быть как хорошие, так и сложные моменты. Готовьтесь к разным возможностям.", "Не забывайте, что это зависит от ваших решений и действий. Выбирайте мудро.", "Будущее полно неожиданностей, но оно зависит только от вас.", "То что вы выдумали будет с полными неожиданностями, и оно зависит от ваших решений. Будьте готовы к разным вариантам.", "Это решение - как лабиринт, где каждый выбор будет важен. Рассматривайте свои возможности внимательно.", "В каждом решении судьба дает й уроки. Извлекайте опыт из каждого момента." #нейтральные
                     "Судьба может иметь свои сложности. Будьте готовы к трудностям и разочарованиям.",  "Вероятно, стоит подготовиться к вызовам и препятствиям на вашем пути.", "Это выглядит не слишком обнадеживающе. Постарайтесь быть готовыми к разным исходам.", "Не стоит расслабляться. Судьба требует от вас усилий и преданности.","Вас ждут трудности и испытания по этому поводу. Постарайтесь быть крепкими и решительными.","Будьте осторожны в этом решении, судьба не всегда будет легкой.", "Будьте готовы к ветрам перемен. Сложности могут быть тяжелыми, но они будут временными.","Сложности могут быть частью вашего пути, но ваша сила в том, чтобы преодолевать их.", "Будьте готовы к временным трудностям. Это - испытание вашей стойкости и решимости.", "Эта дорога будет определенно не легкая"   #отрицательные


        ]



        a = random.choice(list_adv)
        await message.answer("Предсказатель думает...")
        time.sleep(2)
        await message.answer("Предсказатель прокручивает все возможные варианты событий...")
        time.sleep(2)
        await message.answer("Ответ почти готов...")
        time.sleep(1)
        await message.answer(a)

    time.sleep(1.1)
    await message.answer("Введи /adv чтобы принять следующее решение с предсказателем!\n Чтобы правильно использовать данную функцию предсказателя тщательно ознакомся в /help -> /adv ")
    await state.finish()








@dp.message_handler(commands="stop")
async def stop_bot(message: types.Message):
    await message.answer("Бот остановлен.\nДля того чтобы начать роботу бота по новой введи /start")

@dp.message_handler(commands="start")
async def start(message: types.Message):
    list_pred = "Привет, этот бот предскажет и ответит на любой твой вопрос! Введи /ask чтобы задать вопрос предсказателю!\n /adv для универсального вопроса получив универсальный ответ на твой вопрос\n Подробнее /help"
    await message.answer(text=list_pred)

@dp.message_handler(commands="help")
async  def help_bot(message: types.Message):
    await message.answer("wizz Predictor - бот который дает ответы на твои вопросы с помощью секретных технологий о которых мало кто знает, он дает правильные ответы в 99.99% случаях, лимита на вопросы нету.\n/start - запустить предсказателя(бота)\n/ask - спросить обычный вопрос у предсказателя. Пример правильного вопроса к предсказателю ask - Я хороший человек?  \n/adv - Напишите вашу идею или что то из решений, он ответит вам предсказав будущее. Пример правильно поставленого вопроса к предсказателю adv - Стоит ли рассказывать свою новую идею на собеседовании? подобные вопросы/решения/идеи будут правильными для поставления\n/stop - Полная остановка бота\n/help - Полная информация по боту\nРазработчик бота: @hejn32\n Нашли ошибку? - писать @hejn32\n Есть хорошая идея для продвижения телеграм бота - писать @hejn32 ", reply_markup=ReplyKeyboardRemove())




async def on_startup(dp):
    await set_default_commands(dp)

if __name__ == "__main__":
    executor.start_polling(
        dp,
        on_startup=on_startup
    )